# --------------------------
# Etapa de compilación (builder)
# --------------------------
FROM node:18 AS builder

# Activar Yarn primero
RUN corepack enable && corepack prepare yarn@4.9.4 --activate

WORKDIR /Sevens-Core

# 1. Copiar solo los manifiestos de dependencias.
COPY package.json yarn.lock ./
COPY apps/ ./apps/
COPY packages/ ./packages/
COPY infra/ ./infra/

# ======================= PASO DE DEPURACIÓN (Opcional, se puede quitar) =======================
RUN echo "--- Verificando la estructura de archivos ANTES de yarn install ---" && \
    find . -name "package.json" && \
    echo "------------------------------------------------------------"
# =========================================================================================

# 2. Instalar todas las dependencias.
#    ELIMINAMOS --immutable para permitir que Yarn actualice el lockfile si es necesario.
RUN yarn install


# 3. Copiar todo el código fuente del monorepo.
COPY . .


# 4. Compilar la aplicación específica.
RUN yarn workspace @sevens/core-gateway build


# --------------------------
# Etapa final Lambda
# --------------------------
FROM public.ecr.aws/lambda/nodejs:18

WORKDIR /var/task

# Copiar los artefactos de compilación desde la etapa 'builder'
COPY --from=builder /Sevens-Core/apps/core-gateway/dist ./dist
COPY --from=builder /Sevens-Core/apps/core-gateway/package.json ./

# Copiar las dependencias de producción de todo el monorepo
COPY --from=builder /Sevens-Core/node_modules ./node_modules

# Definir el handler de Lambda
CMD ["dist/main.handler"]
